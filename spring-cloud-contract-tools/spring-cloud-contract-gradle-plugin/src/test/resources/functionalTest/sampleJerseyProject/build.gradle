/*
 *  Copyright 2013-2019 the original author or authors.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/release" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${bootVersion}")
	}
}

apply plugin: 'checkstyle'

allprojects {
	group = 'com.example.jersey'
}

ext {
	spockVersion = '1.0-groovy-2.4'

	contractVerifierStubsBaseDirectory = 'src/test/resources/stubs'
}

subprojects {
	apply plugin: 'groovy'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		mavenLocal()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/release" }
	}

	dependencies {
		testCompile "org.codehaus.groovy:groovy"
		testCompile("org.spockframework:spock-core:$spockVersion") {
			exclude(group: 'org.codehaus.groovy')
		}
		testCompile 'junit:junit:4.12'
		testCompile "com.github.tomakehurst:wiremock:${wiremockVersion}"
		testCompile "com.toomuchcoding.jsonassert:jsonassert:${jsonAssertVersion}"
		testCompile "org.springframework.cloud:spring-cloud-contract-verifier:${verifierVersion}"
	}
}

configure([project(':fraudDetectionService'), project(':loanApplicationService')]) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'maven-publish'

	jar {
		version = '0.0.1'
	}

	bootJar {
		enabled = false
	}

	configurations {
		compile.exclude module: "spring-boot-starter-tomcat"
	}

	dependencies {
		compile 'org.springframework.boot:spring-boot-starter-jersey'
		compile 'org.springframework.boot:spring-boot-starter-jetty'

		testRuntime("org.spockframework:spock-spring:$spockVersion") {
			exclude(group: 'org.codehaus.groovy')
		}

		testCompile "org.mockito:mockito-core"
		testCompile "org.springframework:spring-test"
		testCompile "org.springframework.boot:spring-boot-test"
		testCompile("com.github.tomakehurst:wiremock:${wiremockVersion}") {
			exclude group: 'org.eclipse.jetty'
		}
	}

	task cleanup(type: Delete) {
		delete 'src/test/resources/mappings', 'src/test/resources/stubs'
	}

	clean.dependsOn('cleanup')

	test {
		testLogging {
			exceptionFormat = 'full'
		}
	}

}

configure(project(':fraudDetectionService')) {
	test.dependsOn('generateClientStubs')

	apply plugin: 'spring-cloud-contract'

	ext {
		contractsDir = file("mappings")
		stubsOutputDirRoot = file("${project.buildDir}/production/${project.name}-stubs/")
	}

	contracts {
		contractsMode = "REMOTE"
		testFramework ='Spock'
		testMode = 'JaxRsClient'
		baseClassForTests = 'org.springframework.cloud.MvcSpec'
		contractDependency {
			stringNotation("com.example:jersey-contracts:+:")
		}
		contractRepository {
			repositoryUrl = "file://" + file("${project.rootDir.absolutePath}/m2repo/repository").absolutePath
		}
		generatedTestSourcesDir = file("${project.buildDir}/generated-test-sources/")
		stubsOutputDir = stubsOutputDirRoot
		disableStubPublication(project.hasProperty("disablePublication"))
	}
}

configure(project(':loanApplicationService')) {

	task copyCollaboratorStubs(type: Copy) {
		File fraudBuildDir = project(':fraudDetectionService').buildDir
		from(new File(fraudBuildDir, "/production/${project(':fraudDetectionService').name}-stubs/")) {
			include '**/*.json'
		}
		into "src/test/resources/mappings"
	}

	test.dependsOn('copyCollaboratorStubs')
}

wrapper {
	gradleVersion '4.10.2'
}