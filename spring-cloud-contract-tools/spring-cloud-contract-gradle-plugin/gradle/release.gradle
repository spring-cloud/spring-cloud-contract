// This setup seems to work. Let's not touch it.

apply plugin: 'maven-publish'
//apply plugin: 'signing'	

task sourcesJar(type: Jar) {
	classifier 'sources'
	from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
	classifier 'groovydoc'
	from groovydoc.destinationDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives groovydocJar
	archives javadocJar
}

ext {
	resolveRepoName = { Project project ->
		String resolvedRepoName;
		if('release'.equals( resolveVersion(project.version))){
			resolvedRepoName = 'spring-commercial'
		}
//		Milestones not handled for commercial repos
		else {
			resolvedRepoName = 'spring-commercial-snapshot-local'
		}
		logger.lifecycle("For project [$project.name] with " +
				"version [$project.version] the resolved Artifactory repo is [$resolvedRepoName]")
		return resolvedRepoName
	}

	isReleaseVersion = version.endsWith("RELEASE")
	isMilestoneVersion = version.matches('[0-9].[0-9].[0-9].M[0-9]+') || version.matches('[0-9].[0-9].[0-9].RC[0-9]+')
	isSnapshotVersion = !(isReleaseVersion || isMilestoneVersion)
	isReleaseToCentral = project.hasProperty('central')

	resolveVersion = { String version ->
		if (isMilestoneVersion) {
			return 'milestone'
		}
		if (isReleaseVersion) {
			return 'release'
		}
		return 'snapshot'
	}

	repoUrl = isReleaseToCentral ?
			"https://usw1.packages.broadcom.com/artifactory/spring-enterprise-maven-prod/" :
			"https://usw1.packages.broadcom.com/artifactory/spring-enterprise-maven-dev/"
}

String getProp(String propName) {
	return hasProperty(propName) ?
			(getProperty(propName) ?: System.properties[propName]) : System.properties[propName] ?:
			System.getenv(propName)
}