<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-build</artifactId>
		<version>4.1.0-SNAPSHOT</version>
		<relativePath/>
	</parent>

	<artifactId>spring-cloud-contract-parent</artifactId>
	<packaging>pom</packaging>
	<version>4.1.0-SNAPSHOT</version>

	<name>Spring Cloud Contract</name>
	<description>Spring Cloud Contract</description>

	<url>https://github.com/spring-cloud/spring-cloud-contract</url>

	<inceptionYear>2016</inceptionYear>

	<properties>
		<!-- Align it also in Docker image under [docker/spring-cloud-contract-docker/project/gradle.properties] -->
		<camel.version>3.21.1</camel.version>
		<jsch-agent.version>0.0.9</jsch-agent.version>
		<spring-cloud-build.version>4.1.0-SNAPSHOT</spring-cloud-build.version>
		<spring-cloud-zookeeper.version>4.1.0-SNAPSHOT</spring-cloud-zookeeper.version>
		<spring-cloud-stream.version>4.1.0-SNAPSHOT</spring-cloud-stream.version>
		<spring-cloud-netflix.version>4.1.0-SNAPSHOT</spring-cloud-netflix.version>
		<spring-cloud-consul.version>4.1.0-SNAPSHOT</spring-cloud-consul.version>
		<spring-cloud-commons.version>4.1.0-SNAPSHOT</spring-cloud-commons.version>
		<jopt-simple.version>5.0.4</jopt-simple.version>
		<cglib.version>3.3.0</cglib.version>
		<spock-spring.version>2.3-groovy-4.0</spock-spring.version> <!-- @releaser:version-check-off -->
		<hoverfly-junit.version>0.2.2</hoverfly-junit.version>
		<commons-text.version>1.10.0</commons-text.version>
		<handlebars.version>4.3.1</handlebars.version>
		<jgit.version>6.7.0.202309050840-r</jgit.version>
		<javax-inject.version>1</javax-inject.version>
		<json-unit-assertj.version>2.38.0</json-unit-assertj.version>
		<rest-assured.version>5.2.1</rest-assured.version>
		<slf4j.version>[2.0.0,)</slf4j.version>
		<thin-jar.version>1.0.30.RELEASE</thin-jar.version>

		<junit-vintage.version>5.9.1</junit-vintage.version>
		<junit-jupiter.version>5.9.1</junit-jupiter.version>
		<gmavenplus-plugin.version>1.13.0</gmavenplus-plugin.version>
		<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>  <!-- @releaser:version-check-off -->
		<awaitility.version>4.2.0</awaitility.version>
		<artemis.version>2.31.0</artemis.version>
		<testcontainers.version>1.19.1</testcontainers.version>
		<hamcrest.version>2.2</hamcrest.version>

		<!-- We need to have compatibility with Gradle -->
		<groovy.version>4.0.0</groovy.version>
		<!-- We need to have compatibility with Boot -->
		<maven.version>3.6.3</maven.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<!-- Resolver has to be aligned with Maven (e.g resolver 1.4 and Maven 3.6 or resolver 1.3 and Maven 3.5) -->
		<maven.resolver.version>1.9.16</maven.resolver.version>
		<xpath2.processor.version>2.1.100</xpath2.processor.version>
		<xerces.version>2.12.2</xerces.version>
		<jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<InMemoryJavaCompiler.version>1.3.0</InMemoryJavaCompiler.version>

		<contract.kotlin.version>1.8.22</contract.kotlin.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<sisu-inject-plexus.version>2.6.0</sisu-inject-plexus.version>

		<javadoc.failOnError>false</javadoc.failOnError>
		<javadoc.failOnWarnings>false</javadoc.failOnWarnings>
	</properties>

	<modules>
		<module>spring-cloud-contract-dependencies</module>
		<!-- TODO: temporarily disable -->
		<!--<module>docker</module>-->
		<module>docs</module>
		<module>spring-cloud-contract-shade</module>
		<module>spring-cloud-contract-wiremock</module>
		<module>spring-cloud-contract-verifier</module>
		<module>specs</module>
		<module>spring-cloud-contract-stub-runner</module>
		<module>spring-cloud-contract-starters</module>
		<module>spring-cloud-contract-tools</module>
		<module>spring-cloud-contract-stub-runner-boot</module>
		<module>tests</module>
		<module>samples</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-commons-dependencies</artifactId>
				<version>${spring-cloud-commons.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.rest-assured</groupId>
				<artifactId>rest-assured-bom</artifactId>
				<version>${rest-assured.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-spring-boot-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-spring-boot</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-rabbitmq-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-direct-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-bean-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-jackson-starter</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-kafka</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jackson</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-activemq</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>artemis-jms-server</artifactId>
				<version>${artemis.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.jopt-simple</groupId>
				<artifactId>jopt-simple</artifactId>
				<version>${jopt-simple.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-spring</artifactId>
				<version>${spock-spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.groovy</groupId>
						<artifactId>groovy-all</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.groovy</groupId>
						<artifactId>groovy</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>${spock-spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.groovy</groupId>
						<artifactId>groovy-all</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.groovy</groupId>
						<artifactId>groovy</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-junit4</artifactId>
				<version>${spock-spring.version}</version>
			</dependency>
			<dependency>
				<groupId>io.specto</groupId>
				<artifactId>hoverfly-junit</artifactId>
				<version>${hoverfly-junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-text</artifactId>
				<version>${commons-text.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.jknack</groupId>
				<artifactId>handlebars</artifactId>
				<version>${handlebars.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax-inject.version}</version>
			</dependency>

			<!-- Git Stub Downloader-->
			<dependency>
				<groupId>org.eclipse.jgit</groupId>
				<artifactId>org.eclipse.jgit</artifactId>
				<version>${jgit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jgit</groupId>
				<artifactId>org.eclipse.jgit.ssh.jsch</artifactId>
				<version>${jgit.version}</version>
			</dependency>
			<!-- a proxy to ssh-agent and Pageant in Java -->
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch.agentproxy.sshagent</artifactId>
				<version>${jsch-agent.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch.agentproxy.jsch</artifactId>
				<version>${jsch-agent.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch.agentproxy.usocket-jna</artifactId>
				<version>${jsch-agent.version}</version>
			</dependency>
			<!-- Git Stub Downloader -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-contract-dependencies</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-netflix-dependencies</artifactId>
				<version>${spring-cloud-netflix.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-stream-dependencies</artifactId>
				<version>${spring-cloud-stream.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-zookeeper-dependencies</artifactId>
				<version>${spring-cloud-zookeeper.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-consul-dependencies</artifactId>
				<version>${spring-cloud-consul.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-ant</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-bsf</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-console</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-docgenerator</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-groovydoc</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-groovysh</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-jmx</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-json</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-jsr223</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-nio</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-servlet</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-sql</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-swing</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-templates</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-test</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-testng</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-xml</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-resolver-provider</artifactId>
				<version>${maven.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-embedder</artifactId>
				<version>${maven.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-artifact</artifactId>
				<version>${maven.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-settings-builder</artifactId>
				<version>${maven.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sonatype.sisu</groupId>
				 <artifactId>sisu-inject-plexus</artifactId>
				<version>${sisu-inject-plexus.version}</version>
			 </dependency>
			<dependency>
				<groupId>org.apache.maven.resolver</groupId>
				<artifactId>maven-resolver</artifactId>
				<version>${maven.resolver.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.rackspace.eclipse.webtools.sourceediting</groupId>
				<artifactId>org.eclipse.wst.xml.xpath2.processor</artifactId>
				<version>${xpath2.processor.version}</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.version}</version>
			</dependency>
			<!-- Kotlin versions aligned with Gradle -->
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-bom</artifactId>
				<version>${contract.kotlin.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-scripting-compiler-embeddable</artifactId>
				<version>${contract.kotlin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-daemon-embeddable</artifactId>
				<version>${contract.kotlin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-compiler-embeddable</artifactId>
				<version>${contract.kotlin.version}</version>
			</dependency>

			<!-- Ensure that we don't have 2 sets of slf4j on the classpath -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${awaitility.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>artemis-junit</artifactId>
				<version>${artemis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>rabbitmq</artifactId>
				<version>${testcontainers.version}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${testcontainers.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest</artifactId>
				<version>${hamcrest.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<organization>
		<name>Spring</name>
		<url>https://spring.io/</url>
	</organization>

	<developers>
		<developer>
			<id>mariuszs</id>
			<name>Mariusz Smykula</name>
			<email>mariuszs@gmail.com</email>
		</developer>
		<developer>
			<id>marcingrzejszczak</id>
			<name>Marcin Grzejszczak</name>
			<email>mgrzejszczak@vmware.com</email>
		</developer>
		<developer>
			<id>dsyer</id>
			<name>David Syer</name>
			<email>dsyer@vmware.com</email>
		</developer>
		<developer>
			<id>OlgaMaciaszek</id>
			<name>Olga Maciaszek-Sharma</name>
			<email>omaciaszeksharma@vmware.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/spring-cloud/spring-cloud-contract.git
		</connection>
		<developerConnection>
			scm:git:git@github.com:spring-cloud/spring-cloud-contract.git
		</developerConnection>
		<url>https://github.com/spring-cloud/spring-cloud-contract</url>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/spring-cloud/spring-cloud-contract/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Github Actions</system>
		<url>https://github.com/spring-cloud/spring-cloud-contract/actions</url>
	</ciManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>1.5.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*Spec.*</include>
							<include>**/*Tests.*</include>
							<include>**/*Test.*</include>
						</includes>
						<reportFormat>plain</reportFormat>
						<failIfNoTests>true</failIfNoTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>${gmavenplus-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>addSources</goal>
								<goal>addTestSources</goal>
								<goal>compile</goal>
								<goal>compileTests</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>target</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>


	<repositories>
		<!-- Rest Assured -->
		<repository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>netflix-candidates</id>
			<name>Netflix Candidates</name>
			<url>https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>spring</id>
			<repositories>
				<repository>
					<id>spring-snapshots</id>
					<name>Spring Snapshots</name>
					<url>https://repo.spring.io/snapshot</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>false</enabled>
					</releases>
				</repository>
				<repository>
					<id>spring-milestones</id>
					<name>Spring Milestones</name>
					<url>https://repo.spring.io/milestone</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>spring-snapshots</id>
					<name>Spring Snapshots</name>
					<url>https://repo.spring.io/snapshot</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>false</enabled>
					</releases>
				</pluginRepository>
				<pluginRepository>
					<id>spring-milestones</id>
					<name>Spring Milestones</name>
					<url>https://repo.spring.io/milestone</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
				<pluginRepository>
					<id>spring-releases</id>
					<name>Spring Releases</name>
					<url>https://repo.spring.io/release</url>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<profile>
			<id>sonar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<propertyName>surefireArgLine</propertyName>
									<destFile>${project.build.directory}/jacoco.exec
									</destFile>
								</configuration>
							</execution>
							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<dataFile>${project.build.directory}/jacoco.exec
									</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLine}</argLine>
							<argLine>${surefireArgLine}</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
